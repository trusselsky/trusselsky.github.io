[{"content":" Denne viser ulikk statistikk fra honeypot miljøet vårt. Hvor vi blant annet måler eller kjente IP addresser som blir brukt for ondsinnet formål.Data kommer fra vårt Azure miljø å blir oppdatert ved neste datainnsamling. (Historiske data viser de siste 30 dagene)   \nTabellen under viser påloggingsforsøk mot Windows Honeypot miljøet, basert på spesifikk EventID og hvilken IP addresser som er oftest brukt. Denne viser blant annet påloggingsforsøk via RDP og er filtrert etter topp 15 IP-addresser.\n   IP Addresse Event ID Land Antall påloggings forsøk     88.99.30.123 4625 United Kingdom 135595   51.13.78.215 4625 United Kingdom 44028   51.38.214.191 4625 United Kingdom 11003   222.255.217.138 4625 Vietnam 7779   94.232.41.158 4625 Russia 3113   203.125.3.90 4625 Singapore 3112   124.29.232.63 4625 Pakistan 3106   115.243.122.138 4625 India 3104   51.211.5.199 4625 United Kingdom 3102   51.36.2.139 4625 United Kingdom 3101   117.214.98.105 4625 India 3100   20.198.115.140 4625 United States 1560   80.82.77.234 4625 Netherlands 1146   91.241.19.172 4625 Russia 998   80.82.77.85 4625 Netherlands 988    Tabellen under viser påloggingsforsøk mot Windows Honeypot miljøet, basert på mest brukte kontonavn (UPN).\n   Kontonavn Antall påloggings forsøk     \\administrator 71413   \\ADMINISTRATOR 43191   \\ADMIN 34477   \\USER 22852   \\TEST 22819   \\SERVER 22725   \\Administrator 4324   ADMINTN2019\\Administrator 2658   HACKME01\\Administrator 1667   \\SYSADMIN 525   \\AZUREUSER 523   \\AZUREADMIN 520   \\Administrador 360   HACKME01\\Administrador 358   \\Administrateur 166    ","permalink":"https://trusselsky.github.io/stats/","summary":"Denne viser ulikk statistikk fra honeypot miljøet vårt. Hvor vi blant annet måler eller kjente IP addresser som blir brukt for ondsinnet formål.Data kommer fra vårt Azure miljø å blir oppdatert ved neste datainnsamling. (Historiske data viser de siste 30 dagene)   \nTabellen under viser påloggingsforsøk mot Windows Honeypot miljøet, basert på spesifikk EventID og hvilken IP addresser som er oftest brukt. Denne viser blant annet påloggingsforsøk via RDP og er filtrert etter topp 15 IP-addresser.","title":"Stats"},{"content":"Arbeidsgruppen i IETF begynner å komme i mål med HTTP/3 standarden som vil påvirke både ytelsen og sikkerheten på all nett-trafikk, så hva er de viktigste endringene å hvordan påvirker det også sikkerheten?\nHistorien så langt Det skjer for tiden veldig mye utvikling på teknologifronten når det gjelder web og hvordan vi kommuniserer med netttjenester. Når man åpner en nettleser mot f.eks vg.no vil enhenten du sitter på benytte en rekke nettverksprotokoller for å kommunisere med VG sin infrastruktur.\nProtokollen som benyttes i bunn på nettleser trafikk er HTTP. HTTP har eksistert lenge og majoriteten av nettlesern trafikken i dag benytter HTTP 1.1 protokollen (som har eksistert siden 90-tallet). Problemet med den protokollen var (og er) all trafikk blir sendt i klartekst, derfor måtte man lage en ny versjon av denne protokollen som her HTTPS som krypterer innholdet mellom tjenester og enhet. Her benyttet man til og begynne med SSL og deretter TLS protokollen som krypteringsprotokoll for å kryptere innholdet mellom klient og tjener.\nHTTP benytter TCP som kommunikasjonsprotokoll for overføring av data, som også gjør den sårbar for pakketap eller høy latency. Kombinert med TLS kommunikasjonen fører til høyere tid mellom klient og tjenester for å få etablert kommunikasjon.\nHTTP 1.1 som protokoll har også en del svakheter blant annet at den ikke støtter multiplexing på en god måte som gjør at HTTP trafikk som kommer fra ulike tjenere må vente i tur. Samtidig med f.eks HTTP/2 kom de også med multiplexing som gjør at man ikke får dette problemet. Samtidig introduserte de også blant annet HPACK (Header Compression) som gjør at man reduserer båndbredden.\nNår HTTP/2 standarden kom valgte også flere leverandører og kreve at all kommunikasjon som skulle støtte HTTP/2 måtte bruke TLS som standard. Som gjorde blant annet f.eks ulike nettlesere som Firefox, Chrome og Edge krever HTTPS når man skal bruke HTTP/2 som protokol.\nNB: Med TLS 1.3 prøver man å redusere tiden det tar å etablere kommunikasjon mellom klient og tjener ved å benytte. Her ser man en sammenligning mellom TLS 1.2 over HTTP mot TLS 1.3\nSamtidig som utviklingen har pågått med å prøve å sikre kommunikasjonen (som også i utgangspunktet har ført til tregere kommunikasjon og flere forsinkende ledd) har web utviklingen rast videre, hvor vi nå har mye mer multimedia innhold (bilder,videoer) mye mer 3.parts biblotek og eksterne tjenester. Før var nettleser trafikken mer statisk innhold, hvor det nå har blitt til mye dynamisk innhold og store rammeverk (CMS) med mer multimedia og streaming mekanismer som gjør at man må ha en transport mekanisme som kan overføre data mer effektivt.\nSikkerhet og inspeksjon Med introduksjon av SSL/TLS krypteringsprotokollene betydde dette at kommunikasjon ble kryptert. (dog dette betyr ikke at innholdet nødvendigvis er trygt)\nHTTPS \u0026amp; SSL doesn\u0026#39;t mean \u0026quot;trust this.\u0026quot; It means \u0026quot;this is private.\u0026quot; You may be having a private conversation with Satan.\n\u0026mdash; Scott Hanselman (@shanselman) April 4, 2012  Med mer ondsinnet trafikk som gikk over nett betydde dette at flere måtte begynne å bruke tjenester for å kunne analysere innholdet (som i dag tilbys av de fleste brannmur/proxy leverandører). Dette kunne da analysere innholdet etter f.eks ondsinnet trafikk eller beskytte brukere fra ukjente adresser eller annet innhold. Flere leverandører bruker også lignende mekanismer for å kunne kategorisere innhold samt definere hvilken applikasjon/tjeneste som en bruker kobler seg opp i mot. Dette betyr i prinsippet at proxy/brannmur tjenesten dekrypterer innholdet for å kunne \u0026ldquo;se\u0026rdquo; hva som skjer i trafikk strømmen før trafikken blir kryptert igjen og sendt videre, som en type MiTM (Man-in-the-middle) tjeneste.\nDenne mekanismen ble også brukt for lastbalanseringstjenester der man kunne balansere trafikk basert på spesifikt innhold.\nHvorfor HTTP/3 ? Allerede nå er det mange nettsider/leverandører som har beveget seg videre til HTTP/3, som man ser her så er cirka 13% av all kommunikasjon går via HTTP/3 protokollen Som store leverandører som Google, AWS og Cloudflare, mens resten er fordelt på HTTP 1.1 og HTTP/2 (Statistikk fra Cloudflare Radar siste 30 dagene) som også er supportert av de fleste moderne nettlesere.\nMen man ser også at HTTP/3 har vesentlig forbedret tiden det tar både å etablere kommunikasjon samt også hvordan håndtere pakketap.\nSå er forandret i HTTP/3 ?\n I stedet for TCP benytter HTTP/3 seg av QUIC (Quick UDP Internet Connections) som overføringsprotokoll som er bygget på UDP. Men samtidig tilbyr flere av TCP egenskapene som pålitlighet og overbelastingskontroll algoritmer som f.eks CUBIC eller New Reno. (Dette krever dog at UDP/443 er åpnet i brannmuren) Benytter seg QPACK for komprimering av HTTP headere (Sammenlignet med HPACK som ble brukt i HTTP/2) Krever TLS kryptering for kommunikasjon (Var ikke et krav i HTTP/2, selv om flere leverandører krevde det)  Samtidig er også kryptering som før har blitt håndtert av TLS nå gjort direkte i kommunikasjonsprotokollen som gjør at trafikk inspeksjon som før ble gjort av brannmurer/proxy tjenester ikke lenger er mulig.\nHvordan sikre trafikk fremover ? Med mer og mer av internett trafikken beveger seg mot bruk av HTTP/3 samtidig som standarden blir ferdigstilt, betyr dette også at flere organisasjoner må ta stilling til hvordan det skal håndtere HTTP/3 trafikken. Flere leverandører nå begynner å komme med støtte for HTTP/3\n Blant annet så kommer nå Microsoft med en ny versjon av SMB som også støtter QUIC (https://techcommunity.microsoft.com/t5/itops-talk-blog/smb-over-quic-files-without-the-vpn/ba-p/1183449) Google Cloud støtter QUIC (https://cloud.google.com/blog/products/networking/cloud-cdn-and-load-balancing-support-http3) Citrix ADC Quic (https://docs.citrix.com/en-us/citrix-adc/current-release/system/quic.html)  Akkurat nå er det få til ingen brannmur/proxy leverandører som supporterer inspeksjon av QUIC og HTTP/3 og den generelle anbefalingen er å deaktivere de protokollene i brannmuren, men dette gjør at klientene som sitter på innsiden vil falle tilbake til HTTP 1.1 med TLS. Samtidig beveger flere seg på utsiden av den tradisjonelle brannmuren ved å jobbe fra hjemme eller andre lokasjoner, som gjør at den tradisjonelle brannmuren mister litt av den orginale hensikten ved å beskytte trafikken mellom innsiden og utsiden.\nDerfor vil det være viktig fremover å se på løsninger som gir mer innsikt direkte fra endepunktet perspektivet for å kunne ivareta sikkerhet på samme måte, men samtidig ivareta forbedringene som HTTP/3 kommer med.\n","permalink":"https://trusselsky.github.io/posts/http3ogfremtiden/","summary":"Arbeidsgruppen i IETF begynner å komme i mål med HTTP/3 standarden som vil påvirke både ytelsen og sikkerheten på all nett-trafikk, så hva er de viktigste endringene å hvordan påvirker det også sikkerheten?\nHistorien så langt Det skjer for tiden veldig mye utvikling på teknologifronten når det gjelder web og hvordan vi kommuniserer med netttjenester. Når man åpner en nettleser mot f.eks vg.no vil enhenten du sitter på benytte en rekke nettverksprotokoller for å kommunisere med VG sin infrastruktur.","title":"HTTP/3 og fremtidens websikkerhet"},{"content":"Flere og flere organisasjoner begynner å ta i bruk Kubernetes som platform for å levere fremtidige microtjenester. Kubernetes er også et veldig komplekst økosystem som kan bestå av mange ulike elementer i forhold til nettverkskontroll, konfigurasjonskontroll og CI/CD blant annet.\nNår man skal designe en Kubernetes platform, bør man ha en god forståelse på hvordan man skal sikre løsningen. Her vil det ligge lenker og oppdatert informasjon på referanse arkitektur og best-pratices i forhold til sikring av Kubernetes og tjenester.\n DoD DevSecOps: Reference Design Kubernetes Hardening Guidance  ","permalink":"https://trusselsky.github.io/posts/sikringavkubernetes/","summary":"Flere og flere organisasjoner begynner å ta i bruk Kubernetes som platform for å levere fremtidige microtjenester. Kubernetes er også et veldig komplekst økosystem som kan bestå av mange ulike elementer i forhold til nettverkskontroll, konfigurasjonskontroll og CI/CD blant annet.\nNår man skal designe en Kubernetes platform, bør man ha en god forståelse på hvordan man skal sikre løsningen. Her vil det ligge lenker og oppdatert informasjon på referanse arkitektur og best-pratices i forhold til sikring av Kubernetes og tjenester.","title":"Sikring av Kubernetes og tjenester"},{"content":"Den (28/07) Annonserte GitHub at som en del av Code Scanning tjenesten de leverer at de nå har kommet med 15 nye integrasjoner med åpne kildekode rammeverk som dekker rammeverk som Ruby, PHP, Switch, Terraform, PowerShell og Kubernetes YAML.\nCode Scanning funksjonen ble lansert i 2020 som er tilgjengelig for alle offentelige repositories samt for Private repositories (Krever GitHub Advanced) men gjør at man kan se igjennom kildekoden etter sårbarheter.\nHvordan sette opp Code Scanning Code Scanning kan aktiveres ved å gå inn på et Repository \u0026ndash;\u0026gt; Security \u0026ndash;\u0026gt; Overview \u0026ndash;\u0026gt; Code Scanning\nDeretter må man velge basert på hvilken rammeverk man benytter. Man kan benytte seg av de innebydge arbeidsflyten som er egen basert på definert rammeverk eller man kan bruke CodeQL Analysis\nGitHub Actions med CodeScanning med Terraform Med et eksempel her, skal vi vise hvordan man kan bruke Code Scanning sammen med tfsec for å scanne et Github repository som inneholder Terraform kode for å se etter ikke-sikker konfigurasjon. Code Scanning benytter GitHub Actions, hvor tjenesten vil via en Ubuntu-Worker laste ned innholdet i GitHub repositoriet. Som et eksempel her har vi laget følgende.\n  Fork innholdet i repositoriet her \u0026ndash;\u0026gt; https://github.com/snyk/terraform-goof\n  Gå inn på Security \u0026ndash;\u0026gt; Overview \u0026ndash;\u0026gt; Code Scanning \u0026ndash;\u0026gt; Velg tfsec fra listen klikk Setup this workflow. Dette vil da lage en Github Actions Workflow i ditt repository som vil kjøres hver gang ny kode sjekkes inn. Konfigurasjon vil du kunne se under ./guthub/workflows mappen. Du kan se et eksempel på det her \u0026ndash;\u0026gt; (https://github.com/trusselsky/terraform-goof)\n  Om du vil sette opp workflow direkte fra lokale IDE og pushe konfigurasjon via Git kan du bruke følgende template.\n  name: tfsec on: push: branches: [ master ] pull_request: branches: [ master ] schedule: - cron: '15 13 * * 5' jobs: tfsec: name: Run tfsec sarif report runs-on: ubuntu-latest permissions: actions: read contents: read security-events: write steps: - name: Clone repo uses: actions/checkout@v2 - name: Run tfsec uses: tfsec/tfsec-sarif-action@9a83b5c3524f825c020e356335855741fd02745f with: sarif_file: tfsec.sarif - name: Upload SARIF file uses: github/codeql-action/upload-sarif@v1 with: # Path to SARIF file relative to the root of the repository sarif_file: tfsec.sarif NB: Tfsec har en del innebygget sjekker mot ulike providere i Terraform, mer informasjon kan finnes her (https://tfsec.dev/docs/installation/)\nNår flyten er implementert vil den gå igjennom kildekoden å laste opp eventuelle resultat inn i en SARIF fil. Github vil lese innholdet i den genererte SARIF filen for å vise alarmer som kommer frem. Du kan se resultatet under Security \u0026ndash;\u0026gt; Code Scanning Alerts\n","permalink":"https://trusselsky.github.io/posts/kodescanninggithub/","summary":"Den (28/07) Annonserte GitHub at som en del av Code Scanning tjenesten de leverer at de nå har kommet med 15 nye integrasjoner med åpne kildekode rammeverk som dekker rammeverk som Ruby, PHP, Switch, Terraform, PowerShell og Kubernetes YAML.\nCode Scanning funksjonen ble lansert i 2020 som er tilgjengelig for alle offentelige repositories samt for Private repositories (Krever GitHub Advanced) men gjør at man kan se igjennom kildekoden etter sårbarheter.","title":"Sårbarhetsscanning med GitHub mot kjente rammeverk"},{"content":"Som en del av Windows 11, har Microsoft introdusert en del rekke endringer i forhold til sikkerhet og hardware krav som følger de sikkerhetsfunksjonene. En av de største endringene er at Microsft nå vil kreve at maskiner som skal kjøre Windows 11 på fysiske maskiner, støtter en funksjon i Windows som heter Measured Boot.\nMeasured Boot Measured Boot er delt opp i 2 deler, ene som er Secure Boot prosessen som ble laget for at operativsystemet kun starter opp med programvare som leverandøren kan stole på. Når maskinen starter Secure boot vil den første finne OS Bootloader partisjonen, verifisere at firmwaren er digital signert samt at den ikke er modifisert. Om innholdet er inntakt vil den deretter starte operativsystemet. Andre delen som kalles Trusted Boot sjekker integriteten av alle Windows baserte komponenter (samt ELAM \u0026ldquo;Early Launch Anti-Malware\u0026rdquo; sjekker at alle drivere er digital signerte før de blir lastet inn i bruker kontekst).\nNB: Secure Boot er en funksjon som ligger i UEFI å ikke noe Microsoft har utviklet.\nFor å kunne bruke Measured Boot (m/Secure boot) i Windows krever to ting, det ene er UEFI firmware samt TPM på maskinen.\nHva slags angrep stopper denne tjenesten? Selve sikkerhetsmekanismen er beregnet på å stoppe Bootkits og RootKits. Bootkits er skadelig kode som starter før selve operativsystemet laster inn som gjør at om man skulle bli infisert av en Bootkit, kan koden ligge i maskinen og overleve reinnstallasjon av operativsystem blant annet. Trickbot er en malware aktør som benytter seg av Bootkit som de har kalt TrickBoot (Man kan lese mer om det her \u0026ndash;\u0026gt; https://eclypsium.com/2020/12/03/trickbot-now-offers-trickboot-persist-brick-profit/)\nSamt med ELAM og verifisering av Windows komponenter kan man også unngå Rootkits ved at anti-virus tjenesten kan starte før en eventuelt Rootkit som ofte starter som en prosess eller scheduled task kan starte.\nSelvsagt viktig å påpeke at disse sikkerhetsfunksjonene vil ikke ha noe direkte effekt mot f.eks ransomware angrep, hvor angripere ofte angriper kjørende maskiner ved å utnytte andre sårbarheter. Men dette er rettet mot f.eks mot fysisk angrep hvor noen prøver å modifisere boot prosessen.\nHvorfor er disse TPM kravene her? Så trenger jeg virkelig TPM? å i tilfelle hvilken versjon trenger jeg? Microsoft har endret litt på kravene sine, så for å få lov til å innstallere Windows 11 må man ha støtte for ihvertfall TPM 1.2 eller høyere.\nTPM 1.2 standaren ble ferdig i 2011 så mange av dagens maskiner har\nMan kan også slå av denne sjekken under installasjon ved å legge til en enkel registry nøkkel på maskinen. Ved innstallasjon trykk Shift+F10, åpne registry og legg til nøkkel\nHKEY_LOCAL_MACHINE\\SYSTEM\\Setup “BypassTPMCheck”=dword:00000001 “BypassSecureBootCheck”=dword:00000001 Microsoft anbefaler at man helst har TPM 2.0 chip på maskinene pga det er en stor løft fra TPM 1.2 til TPM 2.0 \u0026ndash;\u0026gt; (https://docs.microsoft.com/en-us/windows/security/information-protection/tpm/tpm-recommendations#tpm-12-vs-20-comparison)\nAndre funksjoner som vil kreve dette Microsoft ønsker også å kunne benytte denne funskjonen som en autentiseringsfaktor også. Mange av tilgangsmekanismene som i dag finnes i Azure AD er basert på enten bruker m/tofator autentisering. Men i bunnen av Windows 11 har Microsoft også utviklet en ny funksjon for utveksling av helse status på maskinen.\nSom betyr f.eks at Windows 11 maskiner kan sende helse signal til Azure AD ved å gi beskjed om status i forhold til Secure Boot før f.eks en enhet får tilgang til data og tjenester, men dette er noe som kommer på sikt.\nMer informasjon NSA har også laget en god oppsummering på UEFI og Secure Boot prosessen \u0026ndash;\u0026gt; https://media.defense.gov/2020/Sep/15/2002497594/-1/-1/0/CTR-UEFI-SECURE-BOOT-CUSTOMIZATION-20200915.PDF/CTR-UEFI-SECURE-BOOT-CUSTOMIZATION-20200915.PDF\n","permalink":"https://trusselsky.github.io/posts/windows11ogsecureboot/","summary":"Som en del av Windows 11, har Microsoft introdusert en del rekke endringer i forhold til sikkerhet og hardware krav som følger de sikkerhetsfunksjonene. En av de største endringene er at Microsft nå vil kreve at maskiner som skal kjøre Windows 11 på fysiske maskiner, støtter en funksjon i Windows som heter Measured Boot.\nMeasured Boot Measured Boot er delt opp i 2 deler, ene som er Secure Boot prosessen som ble laget for at operativsystemet kun starter opp med programvare som leverandøren kan stole på.","title":"Windows 11 og Measured Boot m/TPM"},{"content":"U.S. Cybersecurity og Infrastructure Security Agency (CISA) har sammen laget en liste med de (top 30) vanligste sårbarhetene som blir utnyttet i angrep, basert på historiske data fra 2020 (samt sålangt i 2021)\nDu kan se listen over de ulike sårbarheten her \u0026ndash;\u0026gt; https://us-cert.cisa.gov/ncas/alerts/aa21-209a PDF utgave her \u0026ndash;\u0026gt; https://us-cert.cisa.gov/sites/default/files/publications/AA21-209A_Joint%20CSA_Top%20Routinely%20Exploited%20Vulnerabilities.pdf\nSårbarhetene kommer fra en ulike rekke leverandører. Basert på historikk data fra 2020, er følgende de meste utnyttet sårbarhetene:\n Citrix - CVE-2019-19781 - arbitrary code execution Pulse - CVE 2019-11510 - arbitrary file reading Fortinet - CVE 2018-13379 - path traversal F5- Big IP - CVE 2020-5902 - remote code execution (RCE) MobileIron - CVE 2020-15505 - RCE Microsoft - CVE-2017-11882 - RCE Atlassian - CVE-2019-11580 - RCE Drupal - CVE-2018-7600 - RCE Telerik - CVE 2019-18935 - RCE Microsoft - CVE-2019-0604 - RCE Microsoft - CVE-2020-0787 - elevation of privilege Microsoft - CVE-2020-1472 - elevation of privilege  Vi så blant annet at Citrix sårbarheten alene kunne påvirke opptil 850 organisasjoner i Norge. Samt blant annet CVE-2021-26855 (Microsoft Exchange) som ble utnyttet mot Stortinget som gjorde det mulig for angripere å hente ut Epost kontoer fra den lokale Exchange databasen ved å kjøre egendefinert kode mot OWA/EXC.\nI 2021 fortsetter angripere å benytte seg av målrettet sårbarheter mot enheter/tjenester som er offentlig tilgjengelig. Blant de som er svært utnyttet så langt i 2021, er sårbarheter i Microsoft, Pulse, Accellion, VMware og Fortinet.\nDe har også kompilert en liste over de ulike CVEene med tiltak man kan gjøre for å fikse opp i de ulike sårbarhetene.\n","permalink":"https://trusselsky.github.io/posts/mestutnyttets%C3%A5rbarheter/","summary":"U.S. Cybersecurity og Infrastructure Security Agency (CISA) har sammen laget en liste med de (top 30) vanligste sårbarhetene som blir utnyttet i angrep, basert på historiske data fra 2020 (samt sålangt i 2021)\nDu kan se listen over de ulike sårbarheten her \u0026ndash;\u0026gt; https://us-cert.cisa.gov/ncas/alerts/aa21-209a PDF utgave her \u0026ndash;\u0026gt; https://us-cert.cisa.gov/sites/default/files/publications/AA21-209A_Joint%20CSA_Top%20Routinely%20Exploited%20Vulnerabilities.pdf\nSårbarhetene kommer fra en ulike rekke leverandører. Basert på historikk data fra 2020, er følgende de meste utnyttet sårbarhetene:\n Citrix - CVE-2019-19781 - arbitrary code execution Pulse - CVE 2019-11510 - arbitrary file reading Fortinet - CVE 2018-13379 - path traversal F5- Big IP - CVE 2020-5902 - remote code execution (RCE) MobileIron - CVE 2020-15505 - RCE Microsoft - CVE-2017-11882 - RCE Atlassian - CVE-2019-11580 - RCE Drupal - CVE-2018-7600 - RCE Telerik - CVE 2019-18935 - RCE Microsoft - CVE-2019-0604 - RCE Microsoft - CVE-2020-0787 - elevation of privilege Microsoft - CVE-2020-1472 - elevation of privilege  Vi så blant annet at Citrix sårbarheten alene kunne påvirke opptil 850 organisasjoner i Norge.","title":"Vanligste sårbarhetene i 2020/2021"},{"content":"","permalink":"https://trusselsky.github.io/artikler/","summary":"","title":"Artikler"},{"content":"Hva er det? Den 30 Juli, ble det avdekket en sårbarhet i Print Spooler tjenesten i Windows. Som er en innebygget tjeneste i Windows som håndterer utskrift samt er også ansvarlig for driver innstallasjon knyttet til oppkobling av skrivere på Windows operativsystem.\nDet har kommet en del informasjon knyttet til denne sårbarheten samtidig som den er veldig omfattende og dekkes av flere CVE\u0026rsquo;er.\n1: CVE-2021-1675 (https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675) som ikke er sårbarheten dubbet PrintNightmare. Microsoft kom med egen patch for denne med månedlig oppdateringer i Juli.\n2: CVE-2021-34527 (https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527) har også kommet med egne patcher for de ulike operativsystemene.\n3: CVE-2021-34481 (https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34481) ny sårbarhet for lokal eskalering av tilganger. (Egen artikkel, kom 16 Juli)\nHvilken versjoner gjelder det? Denne sårbarheten gjelder alle Windows Operativsystem (både klient og Server) fra Windows 7/2008 til Windows 10/2019.\nHvilken konsekvenser har det? Denne sårbarheten kan gjøre det mulig å kompromitere maskiner i gitte scenarioer hvor man har Print Spooler tjenesten kjørende. Dette kan da være nettverksbaserte maskiner som domene kontrollere eller andre typer maskiner. Print Spooler tjenesten kjører som standard. Svakheten er definert slik at man kan lage en egendefinert DLL fil (som gjenspeiler en Print Driver) som man kan få print tjenesten i Windows til å importere under SYSTEM kontekst om Remote Printing tjenestne er aktivert. Denne egendefinerte DLL filen kan f.eks inneholde skjulte kommandoer for å tildele f.eks lokal administrator tilgang. Basert på informasjon vi har tilgjengelig er det ingen aktive angrep som benytter seg av denne angrepsvektoren ennå. Det krever tilgang til f.eks en maskin innenfor domenet for å kunne utnytte seg av sårbarheten som en da autentisert bruker.\nLøsninger/Workarounds Microsoft har kommet med sikkerhetsoppdateringer som løser sårbarheten. Men pga flere sårbarheter som nå blir avdekket i Print Spooler tjenesten, samt generell råd er at man deaktiverer Print Spooler tjenesten på maskiner som ikke har behov for den, som f.eks Domene kontrollere. Merk at sikkerhetsoppdateringene fra Microsoft krever omstart av maskinene som blir oppdatert.\n PowerShell eksempel  Stop-Service -Name Spooler -Force Set-Service -Name Spooler -StartupType Disabled Merk at ved å deaktivere Print Spooler tjenesten vil stoppe muligheten for å kjøre print jobber, dette omfatter også f.eks konvertering til PDF. For maskiner hvor man har behov for print som f.eks Citrix servere eller lokale arbeidsstasjoner er det anbefalt at man deaktiverer inbound remote print for å kunne\nMer informasjon  Eksempler på exploit https://github.com/nemo-wq/PrintNightmare-CVE-2021-34527 Her er også et eksempel på hvordan man kan koble opp til en ekstern fiktiv print tjeneste som deretter gir System tilganger på maskinen. Merk at skaperen bak Mimikatz skriver også hvordan man kan begrense dette til kun godkjente systemer også via Group Policy. Want to test #printnightmare (ep 4.x) user-to-system as a service?🥝\n(POC only, will write a log file to system32)\nconnect to \\\\https://t.co/6Pk2UnOXaG with\n- user: .\\gentilguest\n- password: password\nOpen \u0026#39;Kiwi Legit Printer - x64\u0026#39;, then \u0026#39;Kiwi Legit Printer - x64 (another one)\u0026#39; pic.twitter.com/zHX3aq9PpM\n\u0026mdash; 🥝 Benjamin Delpy (@gentilkiwi) July 17, 2021    ","permalink":"https://trusselsky.github.io/posts/printnightmare/","summary":"Hva er det? Den 30 Juli, ble det avdekket en sårbarhet i Print Spooler tjenesten i Windows. Som er en innebygget tjeneste i Windows som håndterer utskrift samt er også ansvarlig for driver innstallasjon knyttet til oppkobling av skrivere på Windows operativsystem.\nDet har kommet en del informasjon knyttet til denne sårbarheten samtidig som den er veldig omfattende og dekkes av flere CVE\u0026rsquo;er.\n1: CVE-2021-1675 (https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675) som ikke er sårbarheten dubbet PrintNightmare.","title":"PrintNightmare - CVE-2021-34527"},{"content":"Hva er det? Den 19 Juli, ble det avdekket en sårbarhet i SAM (Security Account Manager) databasen i Windows 10 på nyere versjoner. Denne sårbarheten gjorde at brukerdatabasen kunne bli lest av ikke-administrator kontoer i Windows 10 under en gitt kontekst. Dette var kun mulig å gjøre om det fantes VSS (Volume Shadow Service) som oftest brukes for å lage lokale snapshots i Windows (som f.eks Previous Versions). Om man har f.eks backup tjenester som brukes mot Windows 10 klient maskiner vil den ofte bruke VSS for å lage snapshots. Samt f.eks System Restore funksjonen i Windows bruker VSS for å lage snapshosts.\nSårbarheten ble avdekket av Jonas Lyk (https://twitter.com/jonasLyk/status/1417205166172950531)\nHvilken versjoner gjelder det? Dette gjelder Windows 10 (fra 1809 oppover) samt Windows Server 2019. Sårbarheten er kun mulig å utnytte om man har tilgang til å kjøre kode på det aktuelle systemet.\nHvilken konsekvenser har det? Om en klient maskin blir kompromitert samt har shadow copies lokalt på maskinen, kan en angriper bruke dette for å elevere seg selv til å bli lokal administrator. Eller hente ut informasjon om andre brukerkontoer som ligger igjen lokalt, som f.eks domene kontoer.\nLøsninger/Workarounds Microsoft har ikke kommet med patch ennå, men det finnes en workaround for å kunne løse opp i sårbarheten. Samtidig er det viktig å påpeke at sårbarheten ikke blir aktivt utnyttet ennå, men at Microsoft vil komme med en oppdatering fortløpende.\n Begrens tilgang til SAM databasen, kjør CMD/PowerShell som Administrator icacls %windir%\\system32\\config*.* /inheritance:e Slett tidligere Shadow Copies som ble laget før punkt 1 ble gjort. Her er mer informasjon knyttet til hvordan finne og slette Shadow Copies \u0026ndash;\u0026gt; https://support.microsoft.com/en-gb/topic/kb5005357-delete-volume-shadow-copies-1ceaa637-aaa3-4b58-a48b-baf72a2fa9e7  Mer informasjon  Microsoft CVE-2021-36934 (https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934) Python PoC (https://github.com/GossiTheDog/HiveNightmare)  Video av Exploit   ","permalink":"https://trusselsky.github.io/posts/serioussam/","summary":"Hva er det? Den 19 Juli, ble det avdekket en sårbarhet i SAM (Security Account Manager) databasen i Windows 10 på nyere versjoner. Denne sårbarheten gjorde at brukerdatabasen kunne bli lest av ikke-administrator kontoer i Windows 10 under en gitt kontekst. Dette var kun mulig å gjøre om det fantes VSS (Volume Shadow Service) som oftest brukes for å lage lokale snapshots i Windows (som f.eks Previous Versions). Om man har f.","title":"Serious Sam - CVE-2021-36934"}]